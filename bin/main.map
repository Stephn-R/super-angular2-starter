{"version":3,"file":"main.bundle.js","sources":["webpack:///./app/app.component.ts","webpack:///./app/app.module.ts","webpack:///./app/main.browser.ts"],"sourcesContent":["import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app',\n  template: '<h1>My First Angular 2 App</h1>'\n})\nexport class AppComponent {\n  constructor() {\n    // stub\n  }\n}\n\n\n\n/** WEBPACK FOOTER **\n ** ./app/app.component.ts\n **/","import { NgModule }       from '@angular/core';\nimport { BrowserModule  } from '@angular/platform-browser';\nimport { AppComponent }   from './app.component';\n\n@NgModule({\n    bootstrap:    [AppComponent],\n    declarations: [AppComponent],\n    imports:      [BrowserModule]\n})\nexport class AppModule {}\n\n\n\n/** WEBPACK FOOTER **\n ** ./app/app.module.ts\n **/","///<reference path=\"../typings/index.d.ts\"/>\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\nimport { AppModule } from './app.module';\n\n/*\n * Bootstrap our Angular app with a top level NgModule\n */\nexport function main(initialHmrState?: any): Promise<any> {\n  return platformBrowserDynamic()\n  .bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n}\n\n/*\n * Hot Module Reload\n * experimental version by @gdi2290\n */\nif (process.env.NODE_ENV === 'development') {\n  // activate hot module reload\n  let ngHmr = require('angular2-hmr');\n  ngHmr.hotModuleReplacement(main, module);\n} else {\n  // bootstrap when document is ready\n  document.addEventListener('DOMContentLoaded', () => main());\n}\n\n\n\n/** WEBPACK FOOTER **\n ** ./app/main.browser.ts\n **/"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;AAAA;AAMA;AACA;AAEA;AAPA;AAAA;AACA;AACA;AACA;;AAAA;AAKA;AAAA;AAJA;;;;;;;;;;;;;;;;;;ACNA;AACA;AACA;AAOA;AAAA;AAAA;AALA;AAAA;AACA;AACA;AACA;AACA;;AAAA;AACA;AAAA;AAAA;;;;;;;;;ACRA;AACA;AAKA;AACA;AACA;AACA;AACA;AAJA;AAUA;AAEA;AACA;AACA;AAAA;AAEA;AACA;;;;;","sourceRoot":""}